name: üåê Vercel Deployment Pipeline


# Security: Explicit permissions for GITHUB_TOKEN
permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write
  statuses: write

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual trigger

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID_FRONTEND: ${{ secrets.VERCEL_PROJECT_ID_FRONTEND }}
  VERCEL_PROJECT_ID_ADMIN: ${{ secrets.VERCEL_PROJECT_ID_ADMIN }}

jobs:
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: üì• Install dependencies
      run: |
        cd frontend
        npm ci

    - name: üîç TypeScript check
      run: |
        cd frontend
        npm run type-check

    - name: üßπ Lint check
      run: |
        cd frontend
        npm run lint

    - name: üèóÔ∏è Build check
      run: |
        cd frontend
        npm run build

    - name: üöÄ Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ env.VERCEL_ORG_ID }}
        vercel-project-id: ${{ env.VERCEL_PROJECT_ID_FRONTEND }}
        working-directory: ./frontend
        vercel-args: '--prod'

    - name: üìä Frontend deployment summary
      run: |
        echo "üåê Frontend Deployment Complete!"
        echo "================================"
        echo ""
        echo "‚úÖ Frontend deployed to Vercel"
        echo "üîó Production URL: https://quantdesk-frontend.vercel.app"
        echo "üì¶ Build artifacts: Generated by Vercel"
        echo "üîç TypeScript: ‚úÖ Checked"
        echo "üßπ Linting: ‚úÖ Checked"
        echo "üèóÔ∏è Build: ‚úÖ Verified"

  deploy-admin-dashboard:
    name: Deploy Admin Dashboard to Vercel
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: admin-dashboard/package-lock.json

    - name: üì• Install dependencies
      run: |
        cd admin-dashboard
        npm ci

    - name: üßπ Lint check
      run: |
        cd admin-dashboard
        npm run lint

    - name: üèóÔ∏è Build check
      run: |
        cd admin-dashboard
        npm run build

    - name: üöÄ Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ env.VERCEL_ORG_ID }}
        vercel-project-id: ${{ env.VERCEL_PROJECT_ID_ADMIN }}
        working-directory: ./admin-dashboard
        vercel-args: '--prod'

    - name: üìä Admin dashboard deployment summary
      run: |
        echo "üåê Admin Dashboard Deployment Complete!"
        echo "======================================"
        echo ""
        echo "‚úÖ Admin Dashboard deployed to Vercel"
        echo "üîó Production URL: https://quantdesk-admin.vercel.app"
        echo "üì¶ Build artifacts: Generated by Vercel"
        echo "üßπ Linting: ‚úÖ Checked"
        echo "üèóÔ∏è Build: ‚úÖ Verified"

  preview-deployment:
    name: Preview Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: üöÄ Deploy Frontend Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ env.VERCEL_ORG_ID }}
        vercel-project-id: ${{ env.VERCEL_PROJECT_ID_FRONTEND }}
        working-directory: ./frontend
        vercel-args: '--scope=${{ env.VERCEL_ORG_ID }}'

    - name: üöÄ Deploy Admin Dashboard Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ env.VERCEL_ORG_ID }}
        vercel-project-id: ${{ env.VERCEL_PROJECT_ID_ADMIN }}
        working-directory: ./admin-dashboard
        vercel-args: '--scope=${{ env.VERCEL_ORG_ID }}'

    - name: üìä Preview deployment summary
      run: |
        echo "üåê Preview Deployment Complete!"
        echo "==============================="
        echo ""
        echo "‚úÖ Frontend preview deployed"
        echo "‚úÖ Admin dashboard preview deployed"
        echo "üîó Preview URLs available in Vercel dashboard"
        echo "üìã PR: ${{ github.event.pull_request.number }}"
        echo "üîç Branch: ${{ github.head_ref }}"

  vercel-health-check:
    name: Vercel Health Check
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-admin-dashboard]
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - name: üîç Health check Frontend
      run: |
        echo "üîç Vercel Frontend Health Check"
        echo "==============================="
        echo ""
        
        # Wait for deployment to be ready
        sleep 30
        
        # Check if frontend is accessible
        if curl -f -s https://quantdesk-frontend.vercel.app > /dev/null; then
          echo "‚úÖ Frontend is accessible"
        else
          echo "‚ùå Frontend is not accessible"
          exit 1
        fi
        
        # Check response time
        response_time=$(curl -o /dev/null -s -w '%{time_total}' https://quantdesk-frontend.vercel.app)
        echo "‚è±Ô∏è Response time: ${response_time}s"
        
        if (( $(echo "$response_time < 3.0" | bc -l) )); then
          echo "‚úÖ Response time is acceptable"
        else
          echo "‚ö†Ô∏è Response time is slow"
        fi

    - name: üîç Health check Admin Dashboard
      run: |
        echo "üîç Vercel Admin Dashboard Health Check"
        echo "====================================="
        echo ""
        
        # Wait for deployment to be ready
        sleep 30
        
        # Check if admin dashboard is accessible
        if curl -f -s https://quantdesk-admin.vercel.app > /dev/null; then
          echo "‚úÖ Admin Dashboard is accessible"
        else
          echo "‚ùå Admin Dashboard is not accessible"
          exit 1
        fi
        
        # Check response time
        response_time=$(curl -o /dev/null -s -w '%{time_total}' https://quantdesk-admin.vercel.app)
        echo "‚è±Ô∏è Response time: ${response_time}s"
        
        if (( $(echo "$response_time < 3.0" | bc -l) )); then
          echo "‚úÖ Response time is acceptable"
        else
          echo "‚ö†Ô∏è Response time is slow"
        fi

    - name: üìä Performance metrics
      run: |
        echo "üìä Vercel Performance Metrics"
        echo "============================"
        echo ""
        
        # Frontend performance
        echo "üåê Frontend Performance:"
        curl -o /dev/null -s -w "‚Ä¢ Status: %{http_code}\n‚Ä¢ Time: %{time_total}s\n‚Ä¢ Size: %{size_download} bytes\n" https://quantdesk-frontend.vercel.app
        
        echo ""
        echo "üåê Admin Dashboard Performance:"
        curl -o /dev/null -s -w "‚Ä¢ Status: %{http_code}\n‚Ä¢ Time: %{time_total}s\n‚Ä¢ Size: %{size_download} bytes\n" https://quantdesk-admin.vercel.app
        
        echo ""
        echo "‚úÖ Health checks completed"

  vercel-analytics:
    name: Vercel Analytics
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-admin-dashboard]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: üìä Vercel Analytics Summary
      run: |
        echo "üìä Vercel Analytics Summary"
        echo "=========================="
        echo ""
        echo "üåê Frontend Analytics:"
        echo "‚Ä¢ URL: https://quantdesk-frontend.vercel.app"
        echo "‚Ä¢ Framework: Vite + React"
        echo "‚Ä¢ Build: Optimized for production"
        echo "‚Ä¢ CDN: Global edge network"
        echo ""
        echo "üåê Admin Dashboard Analytics:"
        echo "‚Ä¢ URL: https://quantdesk-admin.vercel.app"
        echo "‚Ä¢ Framework: Vite + React + TypeScript"
        echo "‚Ä¢ Build: Optimized for production"
        echo "‚Ä¢ CDN: Global edge network"
        echo ""
        echo "üìà Performance Features:"
        echo "‚Ä¢ Automatic HTTPS"
        echo "‚Ä¢ Global CDN"
        echo "‚Ä¢ Image optimization"
        echo "‚Ä¢ Automatic compression"
        echo "‚Ä¢ Edge functions support"
        echo ""
        echo "üîç Monitoring:"
        echo "‚Ä¢ Real-time analytics"
        echo "‚Ä¢ Performance insights"
        echo "‚Ä¢ Error tracking"
        echo "‚Ä¢ Custom metrics"

  vercel-summary:
    name: üìä Vercel Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-admin-dashboard, preview-deployment, vercel-health-check, vercel-analytics]
    if: always()

    steps:
    - name: üìä Vercel Pipeline Results
      run: |
        echo "üåê Vercel Deployment Pipeline Complete!"
        echo "======================================="
        echo ""
        echo "üìã Pipeline Results:"
        echo "‚Ä¢ Frontend Deployment: ${{ needs.deploy-frontend.result }}"
        echo "‚Ä¢ Admin Dashboard Deployment: ${{ needs.deploy-admin-dashboard.result }}"
        echo "‚Ä¢ Preview Deployment: ${{ needs.preview-deployment.result }}"
        echo "‚Ä¢ Health Check: ${{ needs.vercel-health-check.result }}"
        echo "‚Ä¢ Analytics: ${{ needs.vercel-analytics.result }}"
        echo ""
        echo "üåê Deployment URLs:"
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "‚Ä¢ Frontend: https://quantdesk-frontend.vercel.app"
          echo "‚Ä¢ Admin Dashboard: https://quantdesk-admin.vercel.app"
        elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "‚Ä¢ Preview URLs: Available in Vercel dashboard"
          echo "‚Ä¢ PR: #${{ github.event.pull_request.number }}"
        fi
        echo ""
        echo "üîß Deployment Features:"
        echo "‚Ä¢ Automatic deployments on main branch"
        echo "‚Ä¢ Preview deployments for PRs"
        echo "‚Ä¢ Health checks and monitoring"
        echo "‚Ä¢ Performance analytics"
        echo "‚Ä¢ Global CDN distribution"
        echo ""
        if [[ "${{ needs.deploy-frontend.result }}" == "success" && "${{ needs.deploy-admin-dashboard.result }}" == "success" ]]; then
          echo "üéâ Vercel deployments completed successfully!"
          echo "üöÄ Applications are live and accessible!"
        else
          echo "‚ö†Ô∏è  Some Vercel deployments failed - check logs above"
        fi
