name: 🧪 Testing Pipeline


# Security: Explicit permissions for GITHUB_TOKEN
permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write
  statuses: write

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: 📥 Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: 🔍 TypeScript type check
      run: |
        cd backend
        npm run type-check
        
    - name: 🧹 Lint code
      run: |
        cd backend
        npm run lint
        
    - name: 🧪 Run tests
      run: |
        cd backend
        npm test -- --coverage --watchAll=false
        
    - name: 📊 Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📥 Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: 🔍 TypeScript type check
      run: |
        cd frontend
        npm run type-check
        
    - name: 🧹 Lint code
      run: |
        cd frontend
        npm run lint
        
    - name: 🏗️ Build check
      run: |
        cd frontend
        npm run build:check

  test-admin-dashboard:
    name: Test Admin Dashboard
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: admin-dashboard/package-lock.json
        
    - name: 📥 Install dependencies
      run: |
        cd admin-dashboard
        npm ci
        
    - name: 🧹 Lint code
      run: |
        cd admin-dashboard
        npm run lint
        
    - name: 🏗️ Build check
      run: |
        cd admin-dashboard
        npm run build

  test-data-ingestion:
    name: Test Data Ingestion
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: data-ingestion/package-lock.json
        
    - name: 📥 Install dependencies
      run: |
        cd data-ingestion
        npm ci
        
    - name: 🧹 Lint check (if available)
      run: |
        cd data-ingestion
        npm run lint || echo "No lint script found, skipping..."
      continue-on-error: true

  test-mikey-ai:
    name: Test MIKEY-AI
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: MIKEY-AI/package-lock.json
        
    - name: 📥 Install dependencies
      run: |
        cd MIKEY-AI
        npm ci
        
    - name: 🧹 Lint check (if available)
      run: |
        cd MIKEY-AI
        npm run lint || echo "No lint script found, skipping..."
      continue-on-error: true
        
    - name: 🏗️ Build check (if available)
      run: |
        cd MIKEY-AI
        npm run build || echo "No build script found, skipping..."
      continue-on-error: true

  test-summary:
    name: 📊 Test Summary
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, test-admin-dashboard, test-data-ingestion, test-mikey-ai]
    if: always()
    
    steps:
    - name: 📊 Test Results Summary
      run: |
        echo "🧪 Testing Pipeline Complete!"
        echo "=============================="
        echo "✅ Backend: ${{ needs.test-backend.result }}"
        echo "✅ Frontend: ${{ needs.test-frontend.result }}"
        echo "✅ Admin Dashboard: ${{ needs.test-admin-dashboard.result }}"
        echo "✅ Data Ingestion: ${{ needs.test-data-ingestion.result }}"
        echo "✅ MIKEY-AI: ${{ needs.test-mikey-ai.result }}"
        echo ""
        if [[ "${{ needs.test-backend.result }}" == "success" && "${{ needs.test-frontend.result }}" == "success" && "${{ needs.test-admin-dashboard.result }}" == "success" ]]; then
          echo "🎉 All critical services passed!"
        else
          echo "❌ Some services failed - check logs above"
          exit 1
        fi
