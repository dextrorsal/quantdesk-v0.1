{
  "timestamp": "2025-10-29T11:54:54.045Z",
  "connection": {
    "endpoint": "https://api.devnet.solana.com",
    "version": {
      "feature-set": 3604001754,
      "solana-core": "3.0.6"
    },
    "status": "connected"
  },
  "wallet": {
    "connected": true,
    "connecting": false,
    "name": "Phantom",
    "publicKey": "CWQTht3p9V2QAwbm52K5LErEP9y8D2rihvE9WG7qZhFJ"
  },
  "account": {},
  "transactions": {},
  "errors": [
    "2025-10-29T11:54:38.367Z: Running diagnostics...",
    "2025-10-29T11:54:38.461Z: Diagnostic: Wallet balance 19.9981 SOL",
    "2025-10-29T11:54:38.473Z: Diagnostic: Account address DGQuJnXaKQo6obLaEGbfaJeJHtGBYHsasPQxo9CH9mjo",
    "2025-10-29T11:54:38.473Z: Diagnostics completed successfully",
    "2025-10-29T11:54:40.019Z: Running diagnostics...",
    "2025-10-29T11:54:40.106Z: Diagnostic: Wallet balance 19.9981 SOL",
    "2025-10-29T11:54:40.118Z: Diagnostic: Account address DGQuJnXaKQo6obLaEGbfaJeJHtGBYHsasPQxo9CH9mjo",
    "2025-10-29T11:54:40.118Z: Diagnostics completed successfully",
    "2025-10-29T11:54:41.244Z: ═══════════════════════════════════════════════════════════",
    "2025-10-29T11:54:41.244Z: 🔍 PDA SEED VERIFICATION - Starting...",
    "2025-10-29T11:54:41.244Z: ═══════════════════════════════════════════════════════════",
    "2025-10-29T11:54:41.289Z: \n📋 Step 1: Verifying PDA seed structure...",
    "2025-10-29T11:54:41.290Z: User Account Seeds:",
    "2025-10-29T11:54:41.290Z:   [0]: 757365725f6163636f756e74 (user_account)",
    "2025-10-29T11:54:41.290Z:   [1]: aaf8ed2b69baa4994b3ab59ae396f67a0dcc7d2972c32e082ba5cd32716b76dd (���+i���K:�����z\r�})r�.\b+��2qkv�)",
    "2025-10-29T11:54:41.290Z:   [2]: 0000 (\u0000\u0000)",
    "2025-10-29T11:54:41.290Z:   ✅ Valid: true",
    "2025-10-29T11:54:41.290Z: \nCollateral SOL Seeds:",
    "2025-10-29T11:54:41.290Z:   [0]: 636f6c6c61746572616c (collateral)",
    "2025-10-29T11:54:41.290Z:   [1]: aaf8ed2b69baa4994b3ab59ae396f67a0dcc7d2972c32e082ba5cd32716b76dd (���+i���K:�����z\r�})r�.\b+��2qkv�)",
    "2025-10-29T11:54:41.290Z:   [2]: 534f4c (SOL)",
    "2025-10-29T11:54:41.290Z:   ✅ Valid: true",
    "2025-10-29T11:54:41.290Z: \nProtocol Vault Seeds:",
    "2025-10-29T11:54:41.290Z:   [0]: 70726f746f636f6c5f736f6c5f7661756c74 (protocol_sol_vault)",
    "2025-10-29T11:54:41.290Z:   ✅ Valid: true",
    "2025-10-29T11:54:41.290Z: \n📋 Step 2: Deriving PDAs...",
    "2025-10-29T11:54:41.290Z: Derived PDAs:",
    "2025-10-29T11:54:41.290Z:   User Account: 4sFvaao2dM9LEadk3dKdMUxS17WfzGLuwfrSB5u2Wyjn",
    "2025-10-29T11:54:41.290Z:   Collateral SOL: 61aqJaQpdnbXHyzJKb91iTpgp1SZgWxJL43suY6D6vpd",
    "2025-10-29T11:54:41.290Z:   Protocol Vault: 5pXGgCZiyhRWAbR29oebssF9Cb4tsSwZppvHBuTxUBZ4",
    "2025-10-29T11:54:41.290Z:   Bumps:",
    "2025-10-29T11:54:41.290Z: \n📋 Step 3: Checking Rust expectations...",
    "2025-10-29T11:54:41.290Z: Expected Rust seeds:",
    "2025-10-29T11:54:41.290Z:   User Account: [b\"user_account\", user.key().as_ref(), &[0u8, 0u8]]",
    "2025-10-29T11:54:41.290Z:   Collateral: [b\"collateral\", user.key().as_ref(), b\"SOL\"]",
    "2025-10-29T11:54:41.290Z:   Protocol Vault: [b\"protocol_sol_vault\"]",
    "2025-10-29T11:54:41.290Z: \n✅ Account index buffer matches Rust [0u8, 0u8]: true",
    "2025-10-29T11:54:41.290Z: \n═══════════════════════════════════════════════════════════",
    "2025-10-29T11:54:41.290Z: ✅ PDA VERIFICATION COMPLETE",
    "2025-10-29T11:54:41.290Z: ═══════════════════════════════════════════════════════════",
    "2025-10-29T11:54:44.364Z: ═══════════════════════════════════════════════════════════",
    "2025-10-29T11:54:44.364Z: ⭐ BEST PRACTICE DEPOSIT TEST - Starting...",
    "2025-10-29T11:54:44.364Z: ═══════════════════════════════════════════════════════════",
    "2025-10-29T11:54:44.384Z: 💰 Testing deposit: 0.01 SOL (10000000 lamports)",
    "2025-10-29T11:54:44.390Z: 🔍 This uses the best-practice depositNativeSOLBestPractice() function",
    "2025-10-29T11:54:44.390Z: 📋 Which follows all expert recommendations:",
    "2025-10-29T11:54:44.390Z:    1. Uses provider.wallet.publicKey (not wallet.adapter.publicKey)",
    "2025-10-29T11:54:44.390Z:    2. Derives PDAs correctly matching Rust seeds",
    "2025-10-29T11:54:44.390Z:    3. Uses Anchor's .rpc() method",
    "2025-10-29T11:54:44.390Z:    4. Proper error handling and validation\n",
    "2025-10-29T11:54:46.553Z: ❌❌❌ BEST PRACTICE DEPOSIT FAILED",
    "2025-10-29T11:54:46.555Z: Error: AccountNotSigner: The user account (CWQTht3p9V2QAwbm52K5LErEP9y8D2rihvE9WG7qZhFJ) is not being recognized as a signer. Even though the transaction was signed, Anchor is rejecting it. This might indicate: 1) Account order mismatch with Rust, 2) Object reference issue, or 3) Rust program expecting different signer configuration."
  ]
}